
sudo npm install ionic@latest
ionic start Ionic541SQLite blank
cd Ionic541SQLite/
ionic cordova plugin add cordova-sqlite-storage
sudo npm install @ionic-native/sqlite
code .
ionic serve
ionic cordova platform add android
ionic cordova build android


-------------------------------
ionic start Ionic541SQLiteCertificate blank
cd Ionic541SQLiteCertificate/
ionic serve
ionic cordova platform add android
cd platforms/android/
keytool -genkey -v -keystore Ionic541SQLiteCertificate.keystore -alias Ionic541SQLiteCertificate -keyalg RSA -keysize 2048 -validity 10000
''''
Informe a senha da ▒rea de armazenamento de chaves:  Uma_senha
Informe novamente a nova senha: Uma_senha
Qual ▒ o seu nome e o seu sobrenome?
  [Unknown]:  Carl Edwin
Qual ▒ o nome da sua unidade organizacional?
  [Unknown]:  Minha unidade organizacional
Qual ▒ o nome da sua empresa?
  [Unknown]:  Carl Edwin TI
Qual ▒ o nome da sua Cidade ou Localidade?
  [Unknown]:  Osasco
Qual ▒ o nome do seu Estado ou Munic▒pio?
  [Unknown]:  Sao Paulo
Quais s▒o as duas letras do c▒digo do pa▒s desta unidade?
  [Unknown]:  BR
CN=Carl Edwin, OU=Minha unidade organizacional, O=Carl Edwin TI, L=Osasco, ST=Sao Paulo, C=BR Est▒ correto?
  [n▒o]:  sim

Gerando o par de chaves RSA de 2.048 bit e o certificado autoassinado (SHA256withRSA) com uma validade de 10.000 dias
        para: CN=Carl Edwin, OU=Minha unidade organizacional, O=Carl Edwin TI, L=Osasco, ST=Sao Paulo, C=BR
Informar a senha da chave de <Ionic541SQLiteCertificate>
        (RETURN se for igual ▒ senha da ▒rea do armazenamento de chaves):  Uma_senha
Informe novamente a nova senha: @rro$10


''''
mv Ionic541SQLiteCertificate.keystore Ionic541SQLiteCertificate.jks

criar um arquivo 'release-signing.properties' dentro de Ionic541SQLiteCertificate/platforms/android
''''
storeFile=Ionic541SQLiteCertificate.jks
storeType=jks
keyAlias=Ionic541SQLiteCertificate
// Se você não deseja inserir a senha em cada compilação, use isso:
keyPassword=Uma_senha
storePassword=Uma_senha
''''

cd ../../
ionic build android --release ou ionic build android --prod --release ou ionic cordova build android --release 
ionic cordova build android

Quando precisar de certificado
"%JAVA_HOME%/jre/bin/keytool" -keystore "%JAVA_HOME%/jre/lib/security/cacerts" -importcert -alias MyCertificate -file "cert.cer"
A senha padrão é changeit


***********************************************************************************

Linux

sudo npm install ionic@latest

ionic start Ionic5SQLite blank 

cd Ionic5SQLite

ionic serve --lab

Adicione a plataforma android ao projeto
ionic cordova platform add android

Crie o keystore
keytool -genkey -v -keystore Ionic541SQLiteCertificate.keystore -alias Ionic541SQLiteCertificate -keyalg RSA -keysize 2048 -validity 10000

Em 'platforms/android/'
Ionic541SQLiteCertificate.keystore copie, cole e renomeie a copia para Ionic541SQLiteCertificate.jks

crie o arquivo 'platforms/android/release-signing.properties'
"""""
storeFile=Ionic541SQLiteCertificate.jks
storeType=jks
keyAlias=Ionic541SQLiteCertificate
// Se você não deseja inserir a senha em cada compilação, use isso:
keyPassword=XXXXXX
storePassword=XXXXXX
""""

altere o arquivo config.xml
""""
<?xml version='1.0' encoding='utf-8'?>
<widget id="com.wordpress.carledwinti" version="0.0.1" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">
    <name>Ionic5SQLite</name>
    <description>Ionic/Cordova app 5 SQLite.</description>
    <author email="seuemail@mail.com" href="https://carledwinti.wordpress.com/">Carl Edwin TI Team</author>
    <content src="index.html" />
....
"""

ionic cordova build android --release
